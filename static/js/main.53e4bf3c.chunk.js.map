{"version":3,"sources":["views/Signup/Signup.module.css","views/Login/Login.module.css","components/InputForm/InputForm.module.css","components/Navigation/Navigation.module.css","components/LoginMenu/LoginMenu.module.css","components/Phonebook/Phonebook.module.css","components/UserMenu/UserMenu.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Appbar/Appbar.module.css","views/HomeView/HomeView.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/store.js","components/Navigation/Navigation.js","components/LoginMenu/LoginMenu.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/UserMenu/UserMenu.js","components/Appbar/Appbar.js","views/Login/Login.js","views/HomeView/HomeView.js","views/Signup/Signup.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","components/InputForm/InputForm.js","components/Filter/Filter.js","components/Phonebook/PhonebookItem.js","components/Phonebook/Phonebook.js","components/Container/Container.js","views/Contacts/Contacts.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","loading","error","combineReducers","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","authActions","token","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebookReducer","devTools","process","persistor","persistStore","Navigation","className","s","container","link","activeClassName","link_active","exact","to","LoginMenu","axios","defaults","baseURL","headers","common","Authorization","register","userData","dispatch","a","post","response","data","message","login","logout","getCurrentUser","getState","persistedToken","get","connect","userName","authSelectors","onLogout","authOperations","avatar","slice","button","type","onClick","appbar","Login","password","onChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","form","this","heading","label","input","autoComplete","placeholder","Component","HomeView","Signup","getIsLoading","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","InputForm","number","handleChange","event","find","item","alert","reset","htmlFor","autoFocus","btn","contact","then","catch","contactsOperations","Filter","wrapper","defaultProps","actions","target","onDelete","contactId","delete","close","list","map","Container","title","children","section","Contacts","fetchContacts","isLoadingContacts","component","redirectTo","routeProps","render","restricted","App","onGetCurrentUser","path","mapDispatchToProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,wBAAwB,MAAQ,sBAAsB,MAAQ,sBAAsB,OAAS,yB,mBCArJD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,QAAU,uBAAuB,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,wB,mBCAjJD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,IAAM,yB,mBCAzHD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,YAAc,kC,mBCA1GD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,YAAc,iC,mBCAxGD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,MAAQ,2B,mBCAxFD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,KAAO,uBAAuB,OAAS,2B,mBCAnID,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,sBAAsB,MAAQ,wB,mBCA1FD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,QAAU,6B,mBCAjED,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,4B,0LCCfC,EAAuBC,YAAa,iCACpCC,EAAuBD,YAAa,iCACpCE,EAAqBF,YAAa,+BAElCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BAElCS,EAAeT,YAAa,yBCRnCU,EAAWC,YAAc,IAAD,mBAC3BV,GAAuB,SAACW,EAAD,YAAMC,WADF,cAE3BT,GAAoB,SAACU,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAF5B,cAG3BN,GAAuB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OAAwBC,EAAMC,QAAO,qBAAGC,KAAgBH,QAHpD,IAMxBI,EAAUN,aAAc,GAAD,mBAC1BZ,GAAuB,kBAAM,KADH,cAE1BE,GAAuB,kBAAM,KAFH,cAG1BC,GAAqB,kBAAM,KAHD,cAI1BC,GAAoB,kBAAM,KAJA,cAK1BC,GAAoB,kBAAM,KALA,cAM1BC,GAAkB,kBAAM,KANE,cAO1BC,GAAuB,kBAAM,KAPH,cAQ1BC,GAAuB,kBAAM,KARH,cAS1BC,GAAqB,kBAAM,KATD,IAYvBO,EAASJ,YAAc,GAAD,eACzBF,GAAe,SAACG,EAAD,YAAMC,YAGlBK,EAAQP,YAAc,KAAM,IAEnBQ,cAAgB,CAC7BT,WACAK,SACAE,UACAC,UChBa,GACbE,gBAjBsBpB,YAAa,wBAkBnCqB,gBAjBsBrB,YAAa,wBAkBnCsB,cAjBoBtB,YAAa,sBAkBjCuB,aAhBmBvB,YAAa,qBAiBhCwB,aAhBmBxB,YAAa,qBAiBhCyB,WAhBiBzB,YAAa,mBAiB9B0B,cAfoB1B,YAAa,sBAgBjC2B,cAfoB3B,YAAa,sBAgBjC4B,YAfkB5B,YAAa,oBAgB/B6B,sBAd4B7B,YAAa,8BAezC8B,sBAd4B9B,YAAa,8BAezC+B,oBAd0B/B,YAAa,6BCXnCgC,EAAmB,CACvBC,KAAM,KACNC,MAAO,MAGHC,EAAOxB,YAAcqB,GAAD,iBAAC,EACxBI,EAAYf,iBAAkB,SAACT,EAAD,YAAMC,QAAsBsB,QADnC,YAAC,EAExBC,EAAYZ,cAAe,SAACZ,EAAD,YAAMC,QAAsBsB,QAFhC,YAAC,EAGxBC,EAAYT,eAAgB,kBAAMK,KAHX,YAAC,EAIxBI,EAAYN,uBAAwB,SAAClB,EAAD,YAAMC,WAJnB,IAQpBwB,EAAQ1B,YAAc,MAAD,iBAAC,EACzByB,EAAYf,iBAAkB,SAACT,EAAD,YAAMC,QAAsBwB,SADlC,YAAC,EAEzBD,EAAYZ,cAAe,SAACZ,EAAD,YAAMC,QAAsBwB,SAF/B,YAAC,EAGzBD,EAAYT,eAAgB,kBAAM,QAHV,IAMrBT,EAAQP,YAAc,MAAD,mBACxByB,EAAYd,eAAgB,SAACV,EAAD,YAAMC,WADV,cAExBuB,EAAYX,YAAa,SAACb,EAAD,YAAMC,WAFP,cAGxBuB,EAAYR,aAAc,SAAChB,EAAD,YAAMC,WAHR,cAIxBuB,EAAYL,qBAAsB,SAACnB,EAAD,YAAMC,WAJhB,IAOrByB,EAAkB3B,aAAc,GAAD,mBAClCyB,EAAYf,iBAAkB,kBAAM,KADF,cAElCe,EAAYZ,cAAe,kBAAM,KAFC,cAGlCY,EAAYN,uBAAwB,kBAAM,KAHR,cAIlCM,EAAYd,eAAgB,kBAAM,KAJA,cAKlCc,EAAYX,YAAa,kBAAM,KALG,cAMlCW,EAAYL,qBAAsB,kBAAM,KANN,cAOlCK,EAAYT,eAAgB,kBAAM,KAPA,IAUtBR,cAAgB,CAC7BgB,OACAE,QACAC,kBACApB,UC9BIqB,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAMC,YAAeR,EAAmBS,GACxChD,SAAUiD,GAEZpB,aACAqB,UAAUC,IAKG,GAAER,QAAOS,UAFNC,YAAaV,I,mEChBhBW,GAjBI,WACjB,OACE,uBAAKC,UAAWC,KAAEC,UAAlB,UACE,eAAC,IAAD,CAASF,UAAWC,KAAEE,KAAMC,gBAAiBH,KAAEI,YAAaC,OAAK,EAACC,GAAG,IAArE,kBAGA,eAAC,IAAD,CACEP,UAAWC,KAAEE,KACbC,gBAAiBH,KAAEI,YACnBE,GAAG,aAHL,2B,oBCOSC,GAbG,WAChB,OACE,uBAAKR,UAAWC,KAAEC,UAAlB,UACE,eAAC,IAAD,CAASF,UAAWC,KAAEE,KAAMC,gBAAiBH,KAAEI,YAAaE,GAAG,UAA/D,oBAGA,eAAC,IAAD,CAASP,UAAWC,KAAEE,KAAMC,gBAAiBH,KAAEI,YAAaE,GAAG,SAA/D,uBCPS,GAJS,SAAA1D,GAAK,OAAIA,EAAM0C,KAAKlB,iBAI7B,GAFK,SAAAxB,GAAK,OAAIA,EAAM0C,KAAKrB,KAAKF,M,iDCC7CyC,KAAMC,SAASC,QAAU,2CAEzB,IAAMvC,GAAQ,SACRA,GACFqC,KAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwD1C,IAFtDA,GAAQ,WAKVqC,KAAMC,SAASE,QAAQC,OAAOC,cAAgB,IAwDnC,IAAEC,SApDA,SAAAC,GAAQ,gDAAI,WAAMC,GAAN,gBAAAC,EAAA,6DAC3BD,EAAS9C,EAAYhB,mBADM,kBAIFsD,KAAMU,KAAK,gBAAiBH,GAJ1B,OAInBI,EAJmB,OAKzBhD,GAAUgD,EAASC,KAAKjD,OACxB6C,EAAS9C,EAAYf,gBAAgBgE,EAASC,OANrB,gDAQzBJ,EAAS9C,EAAYd,cAAc,KAAMiE,UARhB,yDAAJ,uDAoDEC,MAxCb,SAAAP,GAAQ,gDAAI,WAAMC,GAAN,gBAAAC,EAAA,6DACxBD,EAAS9C,EAAYb,gBADG,kBAICmD,KAAMU,KAAK,eAAgBH,GAJ5B,OAIhBI,EAJgB,OAKtBhD,GAAUgD,EAASC,KAAKjD,OACxB6C,EAAS9C,EAAYZ,aAAa6D,EAASC,OANrB,gDAQtBJ,EAAS9C,EAAYX,WAAW,KAAM8D,UARhB,yDAAJ,uDAwCYE,OA5BnB,2DAAM,WAAMP,GAAN,UAAAC,EAAA,6DACnBD,EAAS9C,EAAYV,iBADF,kBAGXgD,KAAMU,KAAK,gBAHA,OAIjB/C,KACA6C,EAAS9C,EAAYT,iBALJ,gDAOjBuD,EAAS9C,EAAYR,YAAY,KAAM2D,UAPtB,yDAAN,uDA4B2BG,eAjBnB,2DAAM,WAAOR,EAAUS,GAAjB,oBAAAR,EAAA,2DACiBQ,IAArBC,EADI,EACnBpC,KAAQnB,MADW,wDAO3BA,GAAUuD,GACVV,EAAS9C,EAAYP,yBARM,kBAUF6C,KAAMmB,IAAI,iBAVR,OAUnBR,EAVmB,OAWzBH,EAAS9C,EAAYN,sBAAsBuD,EAASC,OAX3B,kDAazBJ,EAAS9C,EAAYL,oBAAoB,KAAMwD,UAbtB,0DAAN,0D,oBCrBRO,gBARS,SAAAhF,GAAK,MAAK,CAChCiF,SAAUC,GAA0BlF,OAGX,SAAAoE,GAAQ,MAAK,CACtCe,SAAU,kBAAMf,EAASgB,GAAeT,cAG3BK,EApBE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUE,EAAe,EAAfA,SAC5B,OACE,uBAAKhC,UAAWC,KAAEC,UAAlB,UACE,uBAAMF,UAAWC,KAAEiC,OAAnB,SAA4BJ,EAASK,MAAM,EAAG,KAC9C,uBAAMnC,UAAWC,KAAEjC,KAAnB,SAA0B8D,IAC1B,yBAAQ9B,UAAWC,KAAEmC,OAAQC,KAAK,SAASC,QAASN,EAApD,2B,oBCUSH,gBAJS,SAAAhF,GAAK,MAAK,CAChCwB,gBAAiB0D,GAA8BlF,MAGlCgF,EAbA,SAAC,GAAyB,IAAvBxD,EAAsB,EAAtBA,gBAChB,OACE,uBAAK2B,UAAWC,KAAEsC,OAAlB,UACE,eAAC,GAAD,IACElE,EAAkC,eAAC,GAAD,IAAhB,eAAC,GAAD,U,oBCPpBmE,G,4MACJ3F,MAAQ,CACNoB,MAAO,GACPwE,SAAU,I,EAGZC,SAAW,SAAAC,GACT,MAAwBA,EAAEC,cAAlB5E,EAAR,EAAQA,KAAM6E,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiB9E,EAAO6E,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKrG,Q,4CAG3B,WACE,OACE,wBAAMmD,UAAWC,KAAEkD,KAAMD,SAAUE,KAAKL,aAAxC,UACE,qBAAI/C,UAAWC,KAAEoD,QAAjB,oBACA,yBAAOrD,UAAWC,KAAEqD,MAApB,kBAEE,wBACEtD,UAAWC,KAAEsD,MACblB,KAAK,QACLrE,KAAK,QACLwF,aAAa,MACbC,YAAY,oBACZf,SAAUU,KAAKV,cAGnB,yBAAO1C,UAAWC,KAAEqD,MAApB,qBAEE,wBACEtD,UAAWC,KAAEsD,MACblB,KAAK,WACLrE,KAAK,WACLwF,aAAa,MACbC,YAAY,sBACZf,SAAUU,KAAKV,cAGnB,yBAAQL,KAAK,SAASrC,UAAWC,KAAEmC,OAAnC,4B,GA1CYsB,aAsDL7B,eAAQ,MAJI,SAAAZ,GAAQ,MAAK,CACtCiC,SAAU,SAAArG,GAAK,OAAIoE,EAASgB,GAAeV,MAAM1E,QAGpCgF,CAAkCW,I,oBCpDlCmB,GALE,WACd,OAAO,qBAAI3D,UAAWC,KAAEoD,QAAjB,mJ,oBCEJO,G,4MACJ/G,MAAQ,CACNmB,KAAM,GACNC,MAAO,GACPwE,SAAU,I,EAGZC,SAAW,SAAAC,GACT,MAAwBA,EAAEC,cAAlB5E,EAAR,EAAQA,KAAM6E,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiB9E,EAAO6E,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKrG,Q,4CAG3B,WACE,OACE,wBAAMmD,UAAWC,KAAEkD,KAAMD,SAAUE,KAAKL,aAAxC,UACE,qBAAI/C,UAAWC,KAAEoD,QAAjB,qBACA,yBAAOrD,UAAWC,KAAEqD,MAApB,iBAEE,wBACEtD,UAAWC,KAAEsD,MACblB,KAAK,OACLrE,KAAK,OACLwF,aAAa,MACbC,YAAY,kBACZf,SAAUU,KAAKV,cAGnB,yBAAO1C,UAAWC,KAAEqD,MAApB,kBAEE,wBACEtD,UAAWC,KAAEsD,MACblB,KAAK,QACLrE,KAAK,QACLwF,aAAa,MACbC,YAAY,oBACZf,SAAUU,KAAKV,cAGnB,yBAAO1C,UAAWC,KAAEqD,MAApB,qBAEE,wBACEtD,UAAWC,KAAEsD,MACblB,KAAK,WACLrE,KAAK,WACLwF,aAAa,MACbC,YAAY,sBACZf,SAAUU,KAAKV,cAGnB,yBAAQL,KAAK,SAASrC,UAAWC,KAAEmC,OAAnC,6B,GAtDasB,aAkEN7B,eAAQ,MAJI,SAAAZ,GAAQ,MAAK,CACtCiC,SAAU,SAAArG,GAAK,OAAIoE,EAASgB,GAAelB,SAASlE,QAGvCgF,CAAkC+B,I,SCvEpCC,GAAe,SAAAhH,GAAK,OAAIA,EAAMJ,SAASO,SAIvC8G,GAAc,SAAAjH,GAAK,OAAIA,EAAMJ,SAASA,UAEtCsH,GAAY,SAAAlH,GAAK,OAAIA,EAAMJ,SAASK,QAEpCkH,GAAqBC,aAAe,CAACH,GAAaC,KAAY,SAACtH,EAAUK,GACpF,IAAMoH,EAAmBpH,EAAOqH,cAChC,OAAO1H,EAASK,QAAO,qBAAGkB,KACnBmG,cAAcC,SAASF,SCThCzD,KAAMC,SAASC,QAAU,2CAElB,I,oBCGD0D,G,4MAKJxH,MAAQ,CACNmB,KAAM,GACNsG,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAM5B,cAAtB5E,EAAR,EAAQA,KAAM6E,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiB9E,EAAO6E,K,EAG1BE,aAAe,SAAAyB,GACbA,EAAMxB,iBACN,IAAQhF,EAAS,EAAKnB,MAAdmB,KACR,EAA+B,EAAKiF,MAA5BxG,EAAR,EAAQA,SAAUyG,EAAlB,EAAkBA,SAIlB,GAHoBzG,EAASgI,MAC3B,SAAAC,GAAI,OAAIA,EAAK1G,KAAKmG,gBAAkBnG,EAAKmG,iBAKzC,OAFAQ,MAAM,GAAD,OAAI3G,EAAJ,yBACL,EAAK4G,QAGP1B,EAAS,EAAKrG,OACd,EAAK+H,S,EAGPA,MAAQ,WACN,EAAK9B,SAAS,CAAE9E,KAAM,GAAIsG,OAAQ,M,4CAGpC,WACE,MAAyBlB,KAAKvG,MAAtBmB,EAAR,EAAQA,KAAMsG,EAAd,EAAcA,OACd,OACE,wBAAMtE,UAAWC,KAAEkD,KAAMD,SAAUE,KAAKL,aAAxC,UACE,wBAAO/C,UAAWC,KAAEqD,MAAOuB,QAAQ,OAAnC,kBAGA,wBACE9H,GAAG,OACHsF,KAAK,OACLK,SAAUU,KAAKmB,aACfvE,UAAWC,KAAEsD,MACbvF,KAAK,OACL6E,MAAO7E,EACPyF,YAAY,OACZD,aAAa,MACbsB,WAAS,IAGX,wBAAO9E,UAAWC,KAAEqD,MAAOuB,QAAQ,SAAnC,oBAGA,wBACE9H,GAAG,SACHsF,KAAK,OACLK,SAAUU,KAAKmB,aACfvE,UAAWC,KAAEsD,MACbvF,KAAK,SACL6E,MAAOyB,EACPb,YAAY,eACZD,aAAa,QAEf,yBAAQnB,KAAK,SAASrC,UAAWC,KAAE8E,IAAnC,gC,GAnEgBrB,aAmFT7B,gBATS,SAAAhF,GAAK,MAAK,CAChCJ,SAAUqH,GAAYjH,OAGG,SAAAoE,GAAQ,MAAK,CACtCiC,SAAU,gBAAGlF,EAAH,EAAGA,KAAMsG,EAAT,EAASA,OAAT,OACRrD,ED5EsB,SAAC,GAAD,IAAGjD,EAAH,EAAGA,KAAMsG,EAAT,EAASA,OAAT,OAAsB,SAAArD,GAC9C,IAAM+D,EAAU,CACdhH,OACAsG,UAGFrD,EAAS/E,KAETuE,KAAMU,KAAK,YAAa6D,GACrBC,MAAK,gBAAG5D,EAAH,EAAGA,KAAH,OAAcJ,EAAS9E,EAAkBkF,OAC9C6D,OAAM,SAAAjI,GAAK,OAAIgE,EAAS7E,EAAgBa,EAAMqE,cCkEtC6D,CAA8B,CAAEnH,OAAMsG,gBAGpCzC,CAA6CwC,I,oBCnFtDe,GAAS,SAAC,GAAD,IAAGtI,EAAH,EAAGA,OAAQ4F,EAAX,EAAWA,SAAX,OACb,sBAAK1C,UAAWC,KAAEoF,QAAlB,SACE,yBAAOrF,UAAWC,KAAEqD,MAApB,yBAEE,wBACEtD,UAAWC,KAAEsD,MACblB,KAAK,OACLQ,MAAO/F,EACP4F,SAAUA,UAKlB0C,GAAOE,aAAe,CACpBxI,OAAQ,IAQV,IAQe+E,gBARS,SAAAhF,GAAK,MAAK,CAChCC,OAAQiH,GAAUlH,OAGO,SAAAoE,GAAQ,MAAK,CACtCyB,SAAU,SAAA8B,GAAK,OAAIvD,EAASsE,EAAqBf,EAAMgB,OAAO3C,YAGjDhB,CAA6CuD,I,6BCR7CvD,eAAQ,MAJI,SAAAZ,GAAQ,MAAK,CACtCwE,SAAU,SAAA1I,GAAE,OAAIkE,GHFWyE,EGE+B3I,EHFlB,SAAAkE,GACxCA,EAAS5E,KACToE,KAAMkF,OAAN,oBAA0BD,IACvBT,MAAK,kBAAMhE,EAAS3E,EAAqBoJ,OACzCR,OAAM,SAAAjI,GAAK,OAAIgE,EAAS1E,EAAmBU,EAAMqE,gBAJzB,IAAAoE,MGKd7D,EAvBO,SAAC,GAAoC,IAAlC7D,EAAiC,EAAjCA,KAAMsG,EAA2B,EAA3BA,OAAQvH,EAAmB,EAAnBA,GAAI0I,EAAe,EAAfA,SACzC,OACE,uCACE,kCACGzH,EADH,MACYsG,KAEZ,yBAAQjC,KAAK,SAASrC,UAAWC,KAAE2F,MAAOtD,QAAS,kBAAMmD,EAAS1I,IAAlE,qBCgBS8E,gBANS,SAAAhF,GACtB,MAAO,CACLJ,SAAUuH,GAAmBnH,MAIlBgF,EAtBG,SAAC,GAAkB,IAAhBpF,EAAe,EAAfA,SACnB,OACE,qCACGA,GACC,qBAAIuD,UAAWC,KAAE4F,KAAjB,SACGpJ,EAASqJ,KAAI,SAAAd,GAAO,OACnB,qBAAIhF,UAAWC,KAAEyE,KAAjB,SACE,eAAC,GAAD,gBAAmBM,KADOA,EAAQjI,c,oBCT1CgJ,GAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,2BAASjG,UAAWC,KAAEiG,QAAtB,UACE,qBAAIlG,UAAWC,KAAEoD,QAAjB,SAA2B2C,IAC1BC,MAGLF,GAAUT,aAAe,CACvBU,MAAO,IAWMD,UCbTI,G,uKACJ,WACE/C,KAAKH,MAAMmD,kB,oBAGb,WACE,OACE,uCACE,eAAC,GAAD,CAAWJ,MAAM,YAAjB,SACE,eAAC,GAAD,MAEF,gBAAC,GAAD,CAAWA,MAAM,WAAjB,UACE,eAAC,GAAD,IACC5C,KAAKH,MAAMoD,mBAAqB,uDACjC,eAAC,GAAD,c,GAda3C,aA6BR7B,gBARS,SAAAhF,GAAK,MAAK,CAChCwJ,kBAAmBxC,GAAahH,OAGP,SAAAoE,GAAQ,MAAK,CACtCmF,cAAe,kBAAMnF,GN9BY,SAAAA,GACjCA,EAASnF,KACT2E,KAAMmB,IAAI,aACPqD,MAAK,gBAAG5D,EAAH,EAAGA,KAAH,OAAcJ,EAASjF,EAAqBqF,OACjD6D,OAAM,SAAAjI,GAAK,OAAIgE,EAAShF,EAAmBgB,EAAMqE,oBM6BvCO,CAA6CsE,I,yDCX7CtE,gBAJS,SAAAhF,GAAK,MAAK,CAChCwB,gBAAiB0D,GAA8BlF,MAGlCgF,EAtBK,SAAC,GAAD,IACP6B,EADO,EAClB4C,UACAjI,EAFkB,EAElBA,gBACAkI,EAHkB,EAGlBA,WACGC,EAJe,0BAMlB,eAAC,IAAD,6BACMA,GADN,IAEEC,OAAQ,SAAAxD,GAAK,OACX5E,GAAmBmI,EAAWE,WAC5B,eAAC,IAAD,CAAUnG,GAAIgG,IAEd,eAAC7C,EAAD,gBAAeT,W,gDCMRpB,gBAJS,SAAAhF,GAAK,MAAK,CAChCwB,gBAAiB0D,GAA8BlF,MAGlCgF,EAlBM,SAAC,GAAD,IACR6B,EADQ,EACnB4C,UACAjI,EAFmB,EAEnBA,gBACAkI,EAHmB,EAGnBA,WACGC,EAJgB,0BAMnB,eAAC,IAAD,6BACMA,GADN,IAEEC,OAAQ,SAAAxD,GAAK,OACX5E,EAAkB,eAACqF,EAAD,gBAAeT,IAAY,eAAC,IAAD,CAAU1C,GAAIgG,WCF3DI,G,uKACJ,WACEvD,KAAKH,MAAM2D,qB,oBAGb,WACE,OACE,uCACE,eAAC,GAAD,IACA,gBAAC,IAAD,WACE,eAAC,GAAD,CAAatG,OAAK,EAACuG,KAAK,IAAIP,UAAW3C,KACvC,eAAC,GAAD,CACEkD,KAAK,UACLH,YAAU,EACVH,WAAW,aACXD,UAAW1C,KAEb,eAAC,GAAD,CACEiD,KAAK,SACLH,YAAU,EACVH,WAAW,aACXD,UAAW9D,KAEb,eAAC,GAAD,CACEqE,KAAK,aACLN,WAAW,SACXD,UAAWH,e,GA1BLzC,aAkCZoD,GAAqB,CACzBF,iBAAkB3E,GAAeR,gBAGpBI,eAAQ,KAAMiF,GAAdjF,CAAkC8E,I,MCxCjDI,IAASN,OACP,eAAC,IAAMO,WAAP,UACE,eAAC,IAAD,CAAU5H,MAAOA,EAAMA,MAAvB,SACE,eAAC,IAAD,CAAapC,QAAS,KAAM6C,UAAWT,EAAMS,UAA7C,SACE,eAAC,IAAD,UACE,eAAC,GAAD,YAKRoH,SAASC,eAAe,W","file":"static/js/main.53e4bf3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Signup_form__2AwUx\",\"heading\":\"Signup_heading__2hlU8\",\"label\":\"Signup_label__IzbnX\",\"input\":\"Signup_input__1rJBp\",\"button\":\"Signup_button__1rJIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__RnYgG\",\"heading\":\"Login_heading__3TMRp\",\"label\":\"Login_label__26tIG\",\"input\":\"Login_input__3dIvy\",\"button\":\"Login_button__ADmdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__19Zkp\",\"label\":\"InputForm_label__ffqu2\",\"input\":\"InputForm_input__18_QU\",\"btn\":\"InputForm_btn__-Yutt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navigation_container___wsPy\",\"link\":\"Navigation_link__12o2K\",\"link_active\":\"Navigation_link_active__fzNjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginMenu_container__3mwE7\",\"link\":\"LoginMenu_link__2SnSi\",\"link_active\":\"LoginMenu_link_active__2zJq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__uKNNQ\",\"item\":\"Phonebook_item__1FrRV\",\"close\":\"Phonebook_close__Ru4Oc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__GgYhE\",\"avatar\":\"UserMenu_avatar__2e7Jj\",\"name\":\"UserMenu_name__3e8KV\",\"button\":\"UserMenu_button__3mTE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__1Tm7J\",\"heading\":\"Container_heading__2ErCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appbar\":\"Appbar_appbar__3cIge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"HomeView_heading__2sXaQ\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter } from './phonebook-actions';\n\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload)\n})\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload\n})\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error\n});","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n  name: null,\n  email: null\n}\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\n\n})\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null\n})\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload\n})\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  isAuthenticated,\n  error\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './Navigation.module.css';\n\nconst Navigation = () => {\n  return (\n    <div className={s.container}>\n      <NavLink className={s.link} activeClassName={s.link_active} exact to=\"/\">\n        Home\n      </NavLink>\n      <NavLink\n        className={s.link}\n        activeClassName={s.link_active}\n        to=\"/phonebook\"\n      >\n        Phonebook\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './LoginMenu.module.css';\n\nconst LoginMenu = () => {\n  return (\n    <div className={s.container}>\n      <NavLink className={s.link} activeClassName={s.link_active} to=\"/signup\">\n        Signup\n      </NavLink>\n      <NavLink className={s.link} activeClassName={s.link_active} to=\"/login\">\n        Login\n      </NavLink>\n    </div>\n  );\n};\n\nexport default LoginMenu;\n","const isAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default {\n  isAuthenticated,\n  getUserName,\n};","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = userData => async dispatch => {\n  dispatch(authActions.registerRequest())\n\n  try {\n    const response = await axios.post('/users/signup', userData);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data))\n  } catch (error) {\n    dispatch(authActions.registerError(error.message))\n  }\n}\n\nconst login = userData => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', userData);\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data))\n  } catch (error) {\n    dispatch(authActions.loginError(error.message))\n  }\n}\n\nconst logout = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess())\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message))\n  }\n}\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const { auth: { token: persistedToken } } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('users/current');\n    dispatch(authActions.getCurrentUserSuccess(response.data))\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message))\n  }\n}\n\nexport default { register, login, logout, getCurrentUser }","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\n\nimport s from './UserMenu.module.css';\n\nconst UserMenu = ({ userName, onLogout }) => {\n  return (\n    <div className={s.container}>\n      <span className={s.avatar}>{userName.slice(0, 1)}</span>\n      <span className={s.name}>{userName}</span>\n      <button className={s.button} type=\"button\" onClick={onLogout}>\n        Log Out\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  userName: authSelectors.getUserName(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onLogout: () => dispatch(authOperations.logout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Navigation from '../Navigation/Navigation';\nimport LoginMenu from '../LoginMenu/LoginMenu';\nimport UserMenu from '../UserMenu/UserMenu';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nimport s from './Appbar.module.css';\n\nconst Appbar = ({ isAuthenticated }) => {\n  return (\n    <div className={s.appbar}>\n      <Navigation />\n      {!isAuthenticated ? <LoginMenu /> : <UserMenu />}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Appbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport authOperations from '../../redux/auth/auth-operations';\n\nimport s from './Login.module.css';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  onChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <h2 className={s.heading}>Log in</h2>\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"off\"\n            placeholder=\"Enter your e-mail\"\n            onChange={this.onChange}\n          />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            placeholder=\"Enter your password\"\n            onChange={this.onChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Sign in\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: state => dispatch(authOperations.login(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\n\nimport s from './HomeView.module.css';\n\nconst HomeView = () => {\n   return <h1 className={s.heading}>По плану должно работать...\n   </h1>;\n};\n\nexport default HomeView;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport authOperations from '../../redux/auth/auth-operations';\n\nimport s from './Signup.module.css';\n\nclass Signup extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  onChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <h2 className={s.heading}>Sign up</h2>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            placeholder=\"Enter your name\"\n            onChange={this.onChange}\n          />\n        </label>\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"off\"\n            placeholder=\"Enter your e-mail\"\n            onChange={this.onChange}\n          />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            placeholder=\"Enter your password\"\n            onChange={this.onChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Register\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: state => dispatch(authOperations.register(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getIsLoading = state => state.contacts.loading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getContacts = state => state.contacts.contacts;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter))\n\n})","import axios from 'axios';\n\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } from './phonebook-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios.get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error.message)));\n}\n\nexport const addContact = ({ name, number }) => dispatch => {\n  const contact = {\n    name,\n    number\n  }\n\n  dispatch(addContactRequest());\n\n  axios.post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n}\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\n\nimport s from './InputForm.module.css';\n\nclass InputForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const { contacts, onSubmit } = this.props;\n    const sameContact = contacts.find(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (sameContact) {\n      alert(`${name} Already exists`);\n      this.reset();\n      return;\n    }\n    onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n\n        <label className={s.label} htmlFor=\"number\">\n          Number\n        </label>\n        <input\n          id=\"number\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"number\"\n          value={number}\n          placeholder=\"Phone number\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsOperations.addContact({ name, number })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={s.wrapper}>\n    <label className={s.label}>\n      Find by Name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\n\nimport s from './Phonebook.module.css';\n\nconst PhonebookItem = ({ name, number, id, onDelete }) => {\n  return (\n    <>\n      <span>\n        {name} : {number}\n      </span>\n      <button type=\"button\" className={s.close} onClick={() => onDelete(id)}>\n        +\n      </button>\n    </>\n  );\n};\n\nPhonebookItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(PhonebookItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\n\nimport s from './Phonebook.module.css';\nimport PhonebookItem from './PhonebookItem';\n\nconst Phonebook = ({ contacts }) => {\n  return (\n    <>\n      {contacts && (\n        <ul className={s.list}>\n          {contacts.map(contact => (\n            <li className={s.item} key={contact.id}>\n              <PhonebookItem {...contact} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getVisibleContacts(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Phonebook);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Container.module.css';\n\nconst Container = ({ title, children }) => (\n  <section className={s.section}>\n    <h2 className={s.heading}>{title}</h2>\n    {children}\n  </section>\n);\nContainer.defaultProps = {\n  title: '',\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport InputForm from '../../components/InputForm/InputForm';\nimport Filter from '../../components/Filter/Filter';\nimport Phonebook from '../../components/Phonebook/Phonebook';\nimport Container from '../../components/Container/Container';\nimport { getIsLoading } from '../../redux/phonebook/phonebook-selectors';\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        <Container title=\"Phonebook\">\n          <InputForm />\n        </Container>\n        <Container title=\"Contacts\">\n          <Filter />\n          {this.props.isLoadingContacts && <h2> Loading contacts...</h2>}\n          <Phonebook />\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getIsLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch } from 'react-router-dom';\n\nimport Appbar from './components/Appbar/Appbar';\nimport Login from './views/Login/Login';\nimport HomeView from './views/HomeView/HomeView';\nimport Signup from './views/Signup/Signup';\nimport Contacts from './views/Contacts/Contacts';\nimport PublicRoute from './components/PublicRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport authOperations from './redux/auth/auth-operations';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Appbar />\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/signup\"\n            restricted\n            redirectTo=\"/phonebook\"\n            component={Signup}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/phonebook\"\n            component={Login}\n          />\n          <PrivateRoute\n            path=\"/phonebook\"\n            redirectTo=\"/login\"\n            component={Contacts}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}